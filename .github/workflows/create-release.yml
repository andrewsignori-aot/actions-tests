name: Create Release/Hotfix Branch

on:
  workflow_dispatch:
    inputs:
      commitSHA:
        description: "Commit SHA reference"
        required: true
        type: string
      bumb:
        description: "Select the version. 'patch' and 'prepatch' will generate a hotfix branch, any other options will generate a regular release."
        required: false
        default: "minor"
        type: choice
        options:
          - prerelease
          - major
          - premajor
          - minor
          - preminor
          - patch
          - prepatch
      releaseType:
        description: "Select the release type. By default, only a tag will be created. If you want to create a release with the tag select the type."
        type: choice
        required: false
        options:
          - noRelease
          - draft
          - publish
env:
  BUILD_NAMESPACE: 0c27fb-tools

jobs:
  # Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    environment: DEV
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)

  # Create new tag.
  createTag:
    name: "Create tag"
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: checkEnv
    steps:
      - name: Get bumb value
        uses: haya14busa/action-cond@v1
        id: getBumb
        with:
          cond: ${{ github.event_name == 'workflow_dispatch'}}
          if_true: ${{ inputs.bumb }}
          if_false: "prerelease"

      - name: Get preId value, if provided
        uses: haya14busa/action-cond@v1
        id: getPreId
        with:
          cond: ${{ github.event_name == 'workflow_dispatch' && (inputs.bumb == 'premajor' || inputs.bumb == 'preminor' || inputs.bumb == 'prepatch' || inputs.bumb == 'prerelease') }}
          if_true: ${{ inputs.bumb }}
          if_false: "prerelease"
      - run: |
          echo "bumb: ${{ steps.getBumb.outputs.value }}"
          echo "preId: ${{ steps.getPreId.outputs.value }}"

      - id: createNextTag
        name: "Create tag"
        uses: zwaldowski/semver-release-action@v3
        with:
          prefix: "v"
          bump: ${{ steps.getBumb.outputs.value }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      - run: echo "Tag ${{ steps.createNextTag.outputs.version_tag }} created!"
    outputs:
      newTag: ${{ steps.createNextTag.outputs.version_tag }}

  # Create new release.
  createRelease:
    name: "Create release"
    if: github.event_name == 'workflow_dispatch' && (inputs.releaseType == 'publish' || inputs.releaseType == 'draft')
    runs-on: ubuntu-latest
    needs: createTag
    steps:
      - name: Create release
        id: createNewRelease
        uses: Roang-zero1/github-create-release-action@v3
        with:
          created_tag: ${{ needs.createTag.outputs.newTag }}
          create_draft: ${{ inputs.releaseType == 'draft' }}
          release_title: Release ${{ needs.createTag.outputs.newTag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "created release ${{ needs.createTag.outputs.newTag }} ${{ steps.createNewRelease.outputs.html_url }}!"

  # Create the new branch
  createBranch:
    name: "Create release/hotfix branch"
    runs-on: ubuntu-latest
    needs: createTag
    steps:
      # Define if the relase is a regular release or a hotfix.
      - name: Define release or hotfix
        uses: haya14busa/action-cond@v1
        id: releaseOrotfix
        with:
          cond: ${{ github.event_name == 'workflow_dispatch' && (inputs.bumb == 'patch' || inputs.bumb == 'prepatch') }}
          if_true: hotfix
          if_false: release
      - run: |
          echo "Release type: ${{ steps.releaseOrotfix.outputs.value }}"
      # Create the branch using the commit SHA provided.
      - name: Create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        with:
          branch: "${{ steps.releaseOrotfix.outputs.value }}/${{ needs.createTag.outputs.newTag }}"
          sha: ${{ inputs.commitSHA }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
