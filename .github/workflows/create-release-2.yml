name: Create Release/Hotfix Branch (2)

on:
  workflow_dispatch:
    inputs:
      gitRef:
        description: "Git Ref (e.g. v1.0.0-prerelease.1)"
        required: true
        default: ""
      bumb:
        description: "Select the version. 'patch' will generate a hotfix branch, any other options will generate a regular release."
        required: false
        default: "minor"
        type: choice
        options:
          - major
          - minor
          - patch
      releaseType:
        description: "Select the release type. By default, only a tag will be created. If you want to create a release with the tag select the type."
        type: choice
        required: false
        options:
          - noRelease
          - draft
          - publish

jobs:
  createRelease:
    name: "Create release/hotfix"
    runs-on: ubuntu-latest
    steps:
      # Print variables for logging and debugging purposes
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Pull Request Ref: ${{ inputs.gitRef }}
          echo OC CLI Version: $(oc version)

      # Define if the relase is a regular release or a hotfix.
      - name: Define release or hotfix
        uses: haya14busa/action-cond@v1
        id: releaseOrHotfix
        with:
          cond: ${{ inputs.bumb == 'patch' }}
          if_true: hotfix
          if_false: release
      - run: |
          echo "Release type: ${{ steps.releaseOrHotfix.outputs.value }}"

      # Create the branch
      - name: Create branch with temporary name
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.gitRef }}
          fetch-depth: 0
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "${{ steps.releaseOrHotfix.outputs.value }}/new-${{ steps.releaseOrHotfix.outputs.value }}"
          git push --set-upstream origin "${{ steps.releaseOrHotfix.outputs.value }}/new-${{ steps.releaseOrHotfix.outputs.value }}"

      - name: Checkout again
        uses: actions/checkout@v3
        with:
          ref: "${{ steps.releaseOrHotfix.outputs.value }}/new-${{ steps.releaseOrHotfix.outputs.value }}"
          fetch-depth: 0

      # Create release tag
      - name: "Create release tag"
        if: steps.releaseOrHotfix.outputs.value == 'release'
        id: releaseNextTag
        uses: zwaldowski/semver-release-action@v3
        with:
          prefix: "v"
          preid: "prerelease"
          bump: ${{ inputs.bumb }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: false
          per_branch: false
      - run: echo "Release tag ${{ steps.releaseNextTag.outputs.version_tag }} created!"

      # Define the new branch name
      - name: Define the new branch name
        uses: haya14busa/action-cond@v1
        id: newBranchName
        with:
          cond: ${{ steps.releaseOrHotfix.outputs.value == 'release'}}
          if_true: "${{ steps.releaseOrHotfix.outputs.value }}/${{ steps.releaseNextTag.outputs.version_tag }}"
          if_false: "${{ steps.releaseOrHotfix.outputs.value }}/${{ inputs.gitRef }}"
      - run: |
          echo "New branch name: ${{ steps.newBranchName.outputs.value }}"

      # Create the branch
      - name: Rename branch
        run: |
          git branch -m ${{ steps.newBranchName.outputs.value }}
          git push origin -u ${{ steps.newBranchName.outputs.value }}
          git push origin --delete "${{ steps.releaseOrHotfix.outputs.value }}/new-${{ steps.releaseOrHotfix.outputs.value }}"
